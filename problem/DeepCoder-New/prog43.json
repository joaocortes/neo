Buildfile: /Users/utcs/Desktop/sandbox/github/genesys/build.xml

build:
    [javac] /Users/utcs/Desktop/sandbox/github/genesys/build.xml:4: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
      [jar] Building jar: /Users/utcs/Desktop/sandbox/github/genesys/genesys.jar

jar:
      [jar] Building jar: /Users/utcs/Desktop/sandbox/github/genesys/genesys.jar

neoDeep:
     [java] Run DeepCoder main...Problem{name='./tmp/prog43.json', examples=[Example{input=[[-126, -20, 110, 108, -102, -51, -54, 34, 21, 115, 12, 47, -54, -73, 8, -30, 20, -4, -34, 31]], output=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, Example{input=[[-115, 6, -43, -50, -71, -76, -51, 68, 4, -114, 117, 23, -125, -15, -101, -36, -83, -2, -104, -40]], output=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, Example{input=[[17, 14, -39, -114, -59, -50, 45, -108, -24, -120, 31, 61, 70, -113, -21, 121, 107, 37, 0, -2]], output=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, Example{input=[[-89, -97, -2, -81, -91, -61, 99, 40, -101, 15, -115, 123, -71, -33, -12, 71, 29, -19, 108, -22]], output=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, Example{input=[[84, 51, 103, -77, 54, 49, -54, -21, 78, 107, 15, -25, 88, -115, -61, 46, 0, 61, -119, -64]], output=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}]}
     [java] Sketch #iterations = 0
     [java] Sketch #1: MAXIMUM MAP-MUL MAP-MUL 
     [java] Sketch #iterations = 0
     [java] Sketch #2: MAXIMUM MAP-MUL MAP-DIV 
     [java] Sketch #iterations = 0
     [java] Sketch #3: MAXIMUM MAP-MUL MAP-PLUS 
     [java] Sketch #iterations = 0
     [java] Sketch #4: MAXIMUM MAP-MUL MAP-POW 
     [java] Sketch #iterations = 0
     [java] Sketch #5: MAXIMUM MAP-MUL FILTER 
     [java] Sketch #iterations = 0
     [java] Sketch #6: MAXIMUM MAP-MUL ZIPWITH-PLUS 
     [java] Sketch #iterations = 0
     [java] Sketch #7: MAXIMUM MAP-MUL ZIPWITH-MINUS 
     [java] Sketch #iterations = 0
     [java] Sketch #8: MAXIMUM MAP-MUL ZIPWITH-MUL 
     [java] Sketch #iterations = 0
     [java] Sketch #9: MAXIMUM MAP-MUL ZIPWITH-MIN 
     [java] Sketch #iterations = 0
     [java] Sketch #10: MAXIMUM MAP-MUL ZIPWITH-MAX 
     [java] Sketch #iterations = 0
     [java] Sketch #11: MAXIMUM MAP-MUL SORT 
     [java] Sketch #iterations = 0
     [java] Sketch #12: MAXIMUM MAP-MUL REVERSE 
     [java] Sketch #iterations = 0
     [java] Sketch #13: MAXIMUM MAP-MUL SCANL1-PLUS 
     [java] Sketch #iterations = 0
     [java] Sketch #14: MAXIMUM MAP-MUL SCANL1-MINUS 
     [java] Sketch #iterations = 0
     [java] Sketch #15: MAXIMUM MAP-MUL SCANL1-MUL 
     [java] Sketch #iterations = 0
     [java] Sketch #16: MAXIMUM MAP-MUL SCANL1-MIN 
     [java] Sketch #iterations = 0
     [java] Sketch #17: MAXIMUM MAP-MUL SCANL1-MAX 
     [java] Sketch #iterations = 0
     [java] Sketch #18: MAXIMUM MAP-MUL TAKE 
     [java] Checking Program: (root (TAKE (MAP-MUL input0) (MAXIMUM input0)))
     [java] Prune program:(root (TAKE (MAP-MUL input0) (MAXIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #19: MAXIMUM MAP-MUL DROP 
     [java] Checking Program: (root (DROP (MAP-MUL input0) (MAXIMUM input0)))
     [java] Prune program:(root (DROP (MAP-MUL input0) (MAXIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #20: MAXIMUM MAP-DIV TAKE 
     [java] Checking Program: (root (TAKE (MAP-DIV input0) (MAXIMUM input0)))
     [java] Prune program:(root (TAKE (MAP-DIV input0) (MAXIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #21: MAXIMUM MAP-DIV DROP 
     [java] Checking Program: (root (DROP (MAP-DIV input0) (MAXIMUM input0)))
     [java] Prune program:(root (DROP (MAP-DIV input0) (MAXIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #22: MAXIMUM MAP-PLUS TAKE 
     [java] Checking Program: (root (TAKE (MAP-PLUS input0) (MAXIMUM input0)))
     [java] Prune program:(root (TAKE (MAP-PLUS input0) (MAXIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #23: MAXIMUM MAP-PLUS DROP 
     [java] Checking Program: (root (DROP (MAP-PLUS input0) (MAXIMUM input0)))
     [java] Prune program:(root (DROP (MAP-PLUS input0) (MAXIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #24: MAXIMUM MAP-POW TAKE 
     [java] Checking Program: (root (TAKE (MAP-POW input0) (MAXIMUM input0)))
     [java] Prune program:(root (TAKE (MAP-POW input0) (MAXIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #25: MAXIMUM MAP-POW DROP 
     [java] Checking Program: (root (DROP (MAP-POW input0) (MAXIMUM input0)))
     [java] Prune program:(root (DROP (MAP-POW input0) (MAXIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #26: MAXIMUM FILTER TAKE 
     [java] Checking Program: (root (TAKE (FILTER input0) (MAXIMUM input0)))
     [java] Prune program:(root (TAKE (FILTER input0) (MAXIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #27: MAXIMUM FILTER DROP 
     [java] Checking Program: (root (DROP (FILTER input0) (MAXIMUM input0)))
     [java] Prune program:(root (DROP (FILTER input0) (MAXIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #28: MAXIMUM SORT TAKE 
     [java] Checking Program: (root (TAKE (SORT input0) (MAXIMUM input0)))
     [java] Prune program:(root (TAKE (SORT input0) (MAXIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #29: MAXIMUM SORT DROP 
     [java] Checking Program: (root (DROP (SORT input0) (MAXIMUM input0)))
     [java] Prune program:(root (DROP (SORT input0) (MAXIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #30: MAXIMUM REVERSE TAKE 
     [java] Checking Program: (root (TAKE (REVERSE input0) (MAXIMUM input0)))
     [java] Prune program:(root (TAKE (REVERSE input0) (MAXIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #31: MAXIMUM REVERSE DROP 
     [java] Checking Program: (root (DROP (REVERSE input0) (MAXIMUM input0)))
     [java] Prune program:(root (DROP (REVERSE input0) (MAXIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #32: MAXIMUM SCANL1-PLUS TAKE 
     [java] Checking Program: (root (TAKE (SCANL1-PLUS input0) (MAXIMUM input0)))
     [java] Prune program:(root (TAKE (SCANL1-PLUS input0) (MAXIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #33: MAXIMUM SCANL1-PLUS DROP 
     [java] Checking Program: (root (DROP (SCANL1-PLUS input0) (MAXIMUM input0)))
     [java] Prune program:(root (DROP (SCANL1-PLUS input0) (MAXIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #34: MAXIMUM SCANL1-MINUS TAKE 
     [java] Checking Program: (root (TAKE (SCANL1-MINUS input0) (MAXIMUM input0)))
     [java] Prune program:(root (TAKE (SCANL1-MINUS input0) (MAXIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #35: MAXIMUM SCANL1-MINUS DROP 
     [java] Checking Program: (root (DROP (SCANL1-MINUS input0) (MAXIMUM input0)))
     [java] Prune program:(root (DROP (SCANL1-MINUS input0) (MAXIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #36: MAXIMUM SCANL1-MUL TAKE 
     [java] Checking Program: (root (TAKE (SCANL1-MUL input0) (MAXIMUM input0)))
     [java] Prune program:(root (TAKE (SCANL1-MUL input0) (MAXIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #37: MAXIMUM SCANL1-MUL DROP 
     [java] Checking Program: (root (DROP (SCANL1-MUL input0) (MAXIMUM input0)))
     [java] Prune program:(root (DROP (SCANL1-MUL input0) (MAXIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #38: MAXIMUM SCANL1-MIN TAKE 
     [java] Checking Program: (root (TAKE (SCANL1-MIN input0) (MAXIMUM input0)))
     [java] Prune program:(root (TAKE (SCANL1-MIN input0) (MAXIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #39: MAXIMUM SCANL1-MIN DROP 
     [java] Checking Program: (root (DROP (SCANL1-MIN input0) (MAXIMUM input0)))
     [java] Prune program:(root (DROP (SCANL1-MIN input0) (MAXIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #40: MAXIMUM SCANL1-MAX TAKE 
     [java] Checking Program: (root (TAKE (SCANL1-MAX input0) (MAXIMUM input0)))
     [java] Prune program:(root (TAKE (SCANL1-MAX input0) (MAXIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #41: MAXIMUM SCANL1-MAX DROP 
     [java] Checking Program: (root (DROP (SCANL1-MAX input0) (MAXIMUM input0)))
     [java] Prune program:(root (DROP (SCANL1-MAX input0) (MAXIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #42: MAXIMUM TAKE MAP-MUL 
     [java] Checking Program: (root (MAP-MUL (TAKE input0 (MAXIMUM input0))))
     [java] Prune program:(root (MAP-MUL (TAKE input0 (MAXIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #43: MAXIMUM TAKE MAP-DIV 
     [java] Checking Program: (root (MAP-DIV (TAKE input0 (MAXIMUM input0))))
     [java] Prune program:(root (MAP-DIV (TAKE input0 (MAXIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #44: MAXIMUM TAKE MAP-PLUS 
     [java] Checking Program: (root (MAP-PLUS (TAKE input0 (MAXIMUM input0))))
     [java] Prune program:(root (MAP-PLUS (TAKE input0 (MAXIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #45: MAXIMUM TAKE MAP-POW 
     [java] Checking Program: (root (MAP-POW (TAKE input0 (MAXIMUM input0))))
     [java] Prune program:(root (MAP-POW (TAKE input0 (MAXIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #46: MAXIMUM TAKE FILTER 
     [java] Checking Program: (root (FILTER (TAKE input0 (MAXIMUM input0))))
     [java] Prune program:(root (FILTER (TAKE input0 (MAXIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #47: MAXIMUM TAKE ZIPWITH-PLUS 
     [java] Sketch #iterations = 0
     [java] Sketch #48: MAXIMUM TAKE ZIPWITH-MINUS 
     [java] Sketch #iterations = 0
     [java] Sketch #49: MAXIMUM TAKE ZIPWITH-MUL 
     [java] Sketch #iterations = 0
     [java] Sketch #50: MAXIMUM TAKE ZIPWITH-MIN 
     [java] Sketch #iterations = 0
     [java] Sketch #51: MAXIMUM TAKE ZIPWITH-MAX 
     [java] Sketch #iterations = 0
     [java] Sketch #52: MAXIMUM TAKE SORT 
     [java] Checking Program: (root (SORT (TAKE input0 (MAXIMUM input0))))
     [java] Prune program:(root (SORT (TAKE input0 (MAXIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #53: MAXIMUM TAKE REVERSE 
     [java] Checking Program: (root (REVERSE (TAKE input0 (MAXIMUM input0))))
     [java] Prune program:(root (REVERSE (TAKE input0 (MAXIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #54: MAXIMUM TAKE SCANL1-PLUS 
     [java] Checking Program: (root (SCANL1-PLUS (TAKE input0 (MAXIMUM input0))))
     [java] Prune program:(root (SCANL1-PLUS (TAKE input0 (MAXIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #55: MAXIMUM TAKE SCANL1-MINUS 
     [java] Checking Program: (root (SCANL1-MINUS (TAKE input0 (MAXIMUM input0))))
     [java] Prune program:(root (SCANL1-MINUS (TAKE input0 (MAXIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #56: MAXIMUM TAKE SCANL1-MUL 
     [java] Checking Program: (root (SCANL1-MUL (TAKE input0 (MAXIMUM input0))))
     [java] Prune program:(root (SCANL1-MUL (TAKE input0 (MAXIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #57: MAXIMUM TAKE SCANL1-MIN 
     [java] Checking Program: (root (SCANL1-MIN (TAKE input0 (MAXIMUM input0))))
     [java] Prune program:(root (SCANL1-MIN (TAKE input0 (MAXIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #58: MAXIMUM TAKE SCANL1-MAX 
     [java] Checking Program: (root (SCANL1-MAX (TAKE input0 (MAXIMUM input0))))
     [java] Prune program:(root (SCANL1-MAX (TAKE input0 (MAXIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #59: MAXIMUM DROP MAP-MUL 
     [java] Checking Program: (root (MAP-MUL (DROP input0 (MAXIMUM input0))))
     [java] Prune program:(root (MAP-MUL (DROP input0 (MAXIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #60: MAXIMUM DROP MAP-DIV 
     [java] Checking Program: (root (MAP-DIV (DROP input0 (MAXIMUM input0))))
     [java] Prune program:(root (MAP-DIV (DROP input0 (MAXIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #61: MAXIMUM DROP MAP-PLUS 
     [java] Checking Program: (root (MAP-PLUS (DROP input0 (MAXIMUM input0))))
     [java] Prune program:(root (MAP-PLUS (DROP input0 (MAXIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #62: MAXIMUM DROP MAP-POW 
     [java] Checking Program: (root (MAP-POW (DROP input0 (MAXIMUM input0))))
     [java] Prune program:(root (MAP-POW (DROP input0 (MAXIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #63: MAXIMUM DROP FILTER 
     [java] Checking Program: (root (FILTER (DROP input0 (MAXIMUM input0))))
     [java] Prune program:(root (FILTER (DROP input0 (MAXIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #64: MAXIMUM DROP SORT 
     [java] Checking Program: (root (SORT (DROP input0 (MAXIMUM input0))))
     [java] Prune program:(root (SORT (DROP input0 (MAXIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #65: MAXIMUM DROP REVERSE 
     [java] Checking Program: (root (REVERSE (DROP input0 (MAXIMUM input0))))
     [java] Prune program:(root (REVERSE (DROP input0 (MAXIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #66: MAXIMUM DROP SCANL1-PLUS 
     [java] Checking Program: (root (SCANL1-PLUS (DROP input0 (MAXIMUM input0))))
     [java] Prune program:(root (SCANL1-PLUS (DROP input0 (MAXIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #67: MAXIMUM DROP SCANL1-MINUS 
     [java] Checking Program: (root (SCANL1-MINUS (DROP input0 (MAXIMUM input0))))
     [java] Prune program:(root (SCANL1-MINUS (DROP input0 (MAXIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #68: MAXIMUM DROP SCANL1-MUL 
     [java] Checking Program: (root (SCANL1-MUL (DROP input0 (MAXIMUM input0))))
     [java] Prune program:(root (SCANL1-MUL (DROP input0 (MAXIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #69: MAXIMUM DROP SCANL1-MIN 
     [java] Checking Program: (root (SCANL1-MIN (DROP input0 (MAXIMUM input0))))
     [java] Prune program:(root (SCANL1-MIN (DROP input0 (MAXIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #70: MAXIMUM DROP SCANL1-MAX 
     [java] Checking Program: (root (SCANL1-MAX (DROP input0 (MAXIMUM input0))))
     [java] Prune program:(root (SCANL1-MAX (DROP input0 (MAXIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #71: COUNT MAP-MUL TAKE 
     [java] Checking Program: (root (TAKE (MAP-MUL input0) (COUNT input0)))
     [java] Prune program:(root (TAKE (MAP-MUL input0) (COUNT input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #72: COUNT MAP-MUL DROP 
     [java] Checking Program: (root (DROP (MAP-MUL input0) (COUNT input0)))
     [java] Prune program:(root (DROP (MAP-MUL input0) (COUNT input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #73: COUNT MAP-DIV TAKE 
     [java] Checking Program: (root (TAKE (MAP-DIV input0) (COUNT input0)))
     [java] Prune program:(root (TAKE (MAP-DIV input0) (COUNT input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #74: COUNT MAP-DIV DROP 
     [java] Checking Program: (root (DROP (MAP-DIV input0) (COUNT input0)))
     [java] Prune program:(root (DROP (MAP-DIV input0) (COUNT input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #75: COUNT MAP-PLUS TAKE 
     [java] Checking Program: (root (TAKE (MAP-PLUS input0) (COUNT input0)))
     [java] Prune program:(root (TAKE (MAP-PLUS input0) (COUNT input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #76: COUNT MAP-PLUS DROP 
     [java] Checking Program: (root (DROP (MAP-PLUS input0) (COUNT input0)))
     [java] Prune program:(root (DROP (MAP-PLUS input0) (COUNT input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #77: COUNT MAP-POW TAKE 
     [java] Checking Program: (root (TAKE (MAP-POW input0) (COUNT input0)))
     [java] Prune program:(root (TAKE (MAP-POW input0) (COUNT input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #78: COUNT MAP-POW DROP 
     [java] Checking Program: (root (DROP (MAP-POW input0) (COUNT input0)))
     [java] Prune program:(root (DROP (MAP-POW input0) (COUNT input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #79: COUNT FILTER TAKE 
     [java] Checking Program: (root (TAKE (FILTER input0) (COUNT input0)))
     [java] Prune program:(root (TAKE (FILTER input0) (COUNT input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #80: COUNT FILTER DROP 
     [java] Checking Program: (root (DROP (FILTER input0) (COUNT input0)))
     [java] Prune program:(root (DROP (FILTER input0) (COUNT input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #81: COUNT SORT TAKE 
     [java] Checking Program: (root (TAKE (SORT input0) (COUNT input0)))
     [java] Prune program:(root (TAKE (SORT input0) (COUNT input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #82: COUNT SORT DROP 
     [java] Checking Program: (root (DROP (SORT input0) (COUNT input0)))
     [java] Prune program:(root (DROP (SORT input0) (COUNT input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #83: COUNT REVERSE TAKE 
     [java] Checking Program: (root (TAKE (REVERSE input0) (COUNT input0)))
     [java] Prune program:(root (TAKE (REVERSE input0) (COUNT input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #84: COUNT REVERSE DROP 
     [java] Checking Program: (root (DROP (REVERSE input0) (COUNT input0)))
     [java] Prune program:(root (DROP (REVERSE input0) (COUNT input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #85: COUNT SCANL1-PLUS TAKE 
     [java] Checking Program: (root (TAKE (SCANL1-PLUS input0) (COUNT input0)))
     [java] Prune program:(root (TAKE (SCANL1-PLUS input0) (COUNT input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #86: COUNT SCANL1-PLUS DROP 
     [java] Checking Program: (root (DROP (SCANL1-PLUS input0) (COUNT input0)))
     [java] Prune program:(root (DROP (SCANL1-PLUS input0) (COUNT input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #87: COUNT SCANL1-MINUS TAKE 
     [java] Checking Program: (root (TAKE (SCANL1-MINUS input0) (COUNT input0)))
     [java] Prune program:(root (TAKE (SCANL1-MINUS input0) (COUNT input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #88: COUNT SCANL1-MINUS DROP 
     [java] Checking Program: (root (DROP (SCANL1-MINUS input0) (COUNT input0)))
     [java] Prune program:(root (DROP (SCANL1-MINUS input0) (COUNT input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #89: COUNT SCANL1-MUL TAKE 
     [java] Checking Program: (root (TAKE (SCANL1-MUL input0) (COUNT input0)))
     [java] Prune program:(root (TAKE (SCANL1-MUL input0) (COUNT input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #90: COUNT SCANL1-MUL DROP 
     [java] Checking Program: (root (DROP (SCANL1-MUL input0) (COUNT input0)))
     [java] Prune program:(root (DROP (SCANL1-MUL input0) (COUNT input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #91: COUNT SCANL1-MIN TAKE 
     [java] Checking Program: (root (TAKE (SCANL1-MIN input0) (COUNT input0)))
     [java] Prune program:(root (TAKE (SCANL1-MIN input0) (COUNT input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #92: COUNT SCANL1-MIN DROP 
     [java] Checking Program: (root (DROP (SCANL1-MIN input0) (COUNT input0)))
     [java] Prune program:(root (DROP (SCANL1-MIN input0) (COUNT input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #93: COUNT SCANL1-MAX TAKE 
     [java] Checking Program: (root (TAKE (SCANL1-MAX input0) (COUNT input0)))
     [java] Prune program:(root (TAKE (SCANL1-MAX input0) (COUNT input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #94: COUNT SCANL1-MAX DROP 
     [java] Checking Program: (root (DROP (SCANL1-MAX input0) (COUNT input0)))
     [java] Prune program:(root (DROP (SCANL1-MAX input0) (COUNT input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #95: COUNT TAKE MAP-MUL 
     [java] Checking Program: (root (MAP-MUL (TAKE input0 (COUNT input0))))
     [java] Prune program:(root (MAP-MUL (TAKE input0 (COUNT input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #96: COUNT TAKE MAP-DIV 
     [java] Checking Program: (root (MAP-DIV (TAKE input0 (COUNT input0))))
     [java] Prune program:(root (MAP-DIV (TAKE input0 (COUNT input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #97: COUNT TAKE MAP-PLUS 
     [java] Checking Program: (root (MAP-PLUS (TAKE input0 (COUNT input0))))
     [java] Prune program:(root (MAP-PLUS (TAKE input0 (COUNT input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #98: COUNT TAKE MAP-POW 
     [java] Checking Program: (root (MAP-POW (TAKE input0 (COUNT input0))))
     [java] Prune program:(root (MAP-POW (TAKE input0 (COUNT input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #99: COUNT TAKE FILTER 
     [java] Checking Program: (root (FILTER (TAKE input0 (COUNT input0))))
     [java] Prune program:(root (FILTER (TAKE input0 (COUNT input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #100: COUNT TAKE SORT 
     [java] Checking Program: (root (SORT (TAKE input0 (COUNT input0))))
     [java] Prune program:(root (SORT (TAKE input0 (COUNT input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #101: COUNT TAKE REVERSE 
     [java] Checking Program: (root (REVERSE (TAKE input0 (COUNT input0))))
     [java] Prune program:(root (REVERSE (TAKE input0 (COUNT input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #102: COUNT TAKE SCANL1-PLUS 
     [java] Checking Program: (root (SCANL1-PLUS (TAKE input0 (COUNT input0))))
     [java] Prune program:(root (SCANL1-PLUS (TAKE input0 (COUNT input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #103: COUNT TAKE SCANL1-MINUS 
     [java] Checking Program: (root (SCANL1-MINUS (TAKE input0 (COUNT input0))))
     [java] Prune program:(root (SCANL1-MINUS (TAKE input0 (COUNT input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #104: COUNT TAKE SCANL1-MUL 
     [java] Checking Program: (root (SCANL1-MUL (TAKE input0 (COUNT input0))))
     [java] Prune program:(root (SCANL1-MUL (TAKE input0 (COUNT input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #105: COUNT TAKE SCANL1-MIN 
     [java] Checking Program: (root (SCANL1-MIN (TAKE input0 (COUNT input0))))
     [java] Prune program:(root (SCANL1-MIN (TAKE input0 (COUNT input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #106: COUNT TAKE SCANL1-MAX 
     [java] Checking Program: (root (SCANL1-MAX (TAKE input0 (COUNT input0))))
     [java] Prune program:(root (SCANL1-MAX (TAKE input0 (COUNT input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #107: COUNT DROP MAP-MUL 
     [java] Checking Program: (root (MAP-MUL (DROP input0 (COUNT input0))))
     [java] Prune program:(root (MAP-MUL (DROP input0 (COUNT input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #108: COUNT DROP MAP-DIV 
     [java] Checking Program: (root (MAP-DIV (DROP input0 (COUNT input0))))
     [java] Prune program:(root (MAP-DIV (DROP input0 (COUNT input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #109: COUNT DROP MAP-PLUS 
     [java] Checking Program: (root (MAP-PLUS (DROP input0 (COUNT input0))))
     [java] Prune program:(root (MAP-PLUS (DROP input0 (COUNT input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #110: COUNT DROP MAP-POW 
     [java] Checking Program: (root (MAP-POW (DROP input0 (COUNT input0))))
     [java] Prune program:(root (MAP-POW (DROP input0 (COUNT input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #111: COUNT DROP FILTER 
     [java] Checking Program: (root (FILTER (DROP input0 (COUNT input0))))
     [java] Prune program:(root (FILTER (DROP input0 (COUNT input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #112: COUNT DROP SORT 
     [java] Checking Program: (root (SORT (DROP input0 (COUNT input0))))
     [java] Prune program:(root (SORT (DROP input0 (COUNT input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #113: COUNT DROP REVERSE 
     [java] Checking Program: (root (REVERSE (DROP input0 (COUNT input0))))
     [java] Prune program:(root (REVERSE (DROP input0 (COUNT input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #114: COUNT DROP SCANL1-PLUS 
     [java] Checking Program: (root (SCANL1-PLUS (DROP input0 (COUNT input0))))
     [java] Prune program:(root (SCANL1-PLUS (DROP input0 (COUNT input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #115: COUNT DROP SCANL1-MINUS 
     [java] Checking Program: (root (SCANL1-MINUS (DROP input0 (COUNT input0))))
     [java] Prune program:(root (SCANL1-MINUS (DROP input0 (COUNT input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #116: COUNT DROP SCANL1-MUL 
     [java] Checking Program: (root (SCANL1-MUL (DROP input0 (COUNT input0))))
     [java] Prune program:(root (SCANL1-MUL (DROP input0 (COUNT input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #117: COUNT DROP SCANL1-MIN 
     [java] Checking Program: (root (SCANL1-MIN (DROP input0 (COUNT input0))))
     [java] Prune program:(root (SCANL1-MIN (DROP input0 (COUNT input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #118: COUNT DROP SCANL1-MAX 
     [java] Checking Program: (root (SCANL1-MAX (DROP input0 (COUNT input0))))
     [java] Prune program:(root (SCANL1-MAX (DROP input0 (COUNT input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #119: MINIMUM MAP-MUL TAKE 
     [java] Checking Program: (root (TAKE (MAP-MUL input0) (MINIMUM input0)))
     [java] Prune program:(root (TAKE (MAP-MUL input0) (MINIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #120: MINIMUM MAP-MUL DROP 
     [java] Checking Program: (root (DROP (MAP-MUL input0) (MINIMUM input0)))
     [java] Prune program:(root (DROP (MAP-MUL input0) (MINIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #121: MINIMUM MAP-DIV TAKE 
     [java] Checking Program: (root (TAKE (MAP-DIV input0) (MINIMUM input0)))
     [java] Prune program:(root (TAKE (MAP-DIV input0) (MINIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #122: MINIMUM MAP-DIV DROP 
     [java] Checking Program: (root (DROP (MAP-DIV input0) (MINIMUM input0)))
     [java] Prune program:(root (DROP (MAP-DIV input0) (MINIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #123: MINIMUM MAP-PLUS TAKE 
     [java] Checking Program: (root (TAKE (MAP-PLUS input0) (MINIMUM input0)))
     [java] Prune program:(root (TAKE (MAP-PLUS input0) (MINIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #124: MINIMUM MAP-PLUS DROP 
     [java] Checking Program: (root (DROP (MAP-PLUS input0) (MINIMUM input0)))
     [java] Prune program:(root (DROP (MAP-PLUS input0) (MINIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #125: MINIMUM MAP-POW TAKE 
     [java] Checking Program: (root (TAKE (MAP-POW input0) (MINIMUM input0)))
     [java] Prune program:(root (TAKE (MAP-POW input0) (MINIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #126: MINIMUM MAP-POW DROP 
     [java] Checking Program: (root (DROP (MAP-POW input0) (MINIMUM input0)))
     [java] Prune program:(root (DROP (MAP-POW input0) (MINIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #127: MINIMUM FILTER TAKE 
     [java] Checking Program: (root (TAKE (FILTER input0) (MINIMUM input0)))
     [java] Prune program:(root (TAKE (FILTER input0) (MINIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #128: MINIMUM FILTER DROP 
     [java] Checking Program: (root (DROP (FILTER input0) (MINIMUM input0)))
     [java] Prune program:(root (DROP (FILTER input0) (MINIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #129: MINIMUM SORT TAKE 
     [java] Checking Program: (root (TAKE (SORT input0) (MINIMUM input0)))
     [java] Prune program:(root (TAKE (SORT input0) (MINIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #130: MINIMUM SORT DROP 
     [java] Checking Program: (root (DROP (SORT input0) (MINIMUM input0)))
     [java] Prune program:(root (DROP (SORT input0) (MINIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #131: MINIMUM REVERSE TAKE 
     [java] Checking Program: (root (TAKE (REVERSE input0) (MINIMUM input0)))
     [java] Prune program:(root (TAKE (REVERSE input0) (MINIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #132: MINIMUM REVERSE DROP 
     [java] Checking Program: (root (DROP (REVERSE input0) (MINIMUM input0)))
     [java] Prune program:(root (DROP (REVERSE input0) (MINIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #133: MINIMUM SCANL1-PLUS TAKE 
     [java] Checking Program: (root (TAKE (SCANL1-PLUS input0) (MINIMUM input0)))
     [java] Prune program:(root (TAKE (SCANL1-PLUS input0) (MINIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #134: MINIMUM SCANL1-PLUS DROP 
     [java] Checking Program: (root (DROP (SCANL1-PLUS input0) (MINIMUM input0)))
     [java] Prune program:(root (DROP (SCANL1-PLUS input0) (MINIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #135: MINIMUM SCANL1-MINUS TAKE 
     [java] Checking Program: (root (TAKE (SCANL1-MINUS input0) (MINIMUM input0)))
     [java] Prune program:(root (TAKE (SCANL1-MINUS input0) (MINIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #136: MINIMUM SCANL1-MINUS DROP 
     [java] Checking Program: (root (DROP (SCANL1-MINUS input0) (MINIMUM input0)))
     [java] Prune program:(root (DROP (SCANL1-MINUS input0) (MINIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #137: MINIMUM SCANL1-MUL TAKE 
     [java] Checking Program: (root (TAKE (SCANL1-MUL input0) (MINIMUM input0)))
     [java] Prune program:(root (TAKE (SCANL1-MUL input0) (MINIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #138: MINIMUM SCANL1-MUL DROP 
     [java] Checking Program: (root (DROP (SCANL1-MUL input0) (MINIMUM input0)))
     [java] Prune program:(root (DROP (SCANL1-MUL input0) (MINIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #139: MINIMUM SCANL1-MIN TAKE 
     [java] Checking Program: (root (TAKE (SCANL1-MIN input0) (MINIMUM input0)))
     [java] Prune program:(root (TAKE (SCANL1-MIN input0) (MINIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #140: MINIMUM SCANL1-MIN DROP 
     [java] Checking Program: (root (DROP (SCANL1-MIN input0) (MINIMUM input0)))
     [java] Prune program:(root (DROP (SCANL1-MIN input0) (MINIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #141: MINIMUM SCANL1-MAX TAKE 
     [java] Checking Program: (root (TAKE (SCANL1-MAX input0) (MINIMUM input0)))
     [java] Prune program:(root (TAKE (SCANL1-MAX input0) (MINIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #142: MINIMUM SCANL1-MAX DROP 
     [java] Checking Program: (root (DROP (SCANL1-MAX input0) (MINIMUM input0)))
     [java] Prune program:(root (DROP (SCANL1-MAX input0) (MINIMUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #143: MINIMUM TAKE MAP-MUL 
     [java] Checking Program: (root (MAP-MUL (TAKE input0 (MINIMUM input0))))
     [java] Prune program:(root (MAP-MUL (TAKE input0 (MINIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #144: MINIMUM TAKE MAP-DIV 
     [java] Checking Program: (root (MAP-DIV (TAKE input0 (MINIMUM input0))))
     [java] Prune program:(root (MAP-DIV (TAKE input0 (MINIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #145: MINIMUM TAKE MAP-PLUS 
     [java] Checking Program: (root (MAP-PLUS (TAKE input0 (MINIMUM input0))))
     [java] Prune program:(root (MAP-PLUS (TAKE input0 (MINIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #146: MINIMUM TAKE MAP-POW 
     [java] Checking Program: (root (MAP-POW (TAKE input0 (MINIMUM input0))))
     [java] Prune program:(root (MAP-POW (TAKE input0 (MINIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #147: MINIMUM TAKE FILTER 
     [java] Checking Program: (root (FILTER (TAKE input0 (MINIMUM input0))))
     [java] Prune program:(root (FILTER (TAKE input0 (MINIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #148: MINIMUM TAKE SORT 
     [java] Checking Program: (root (SORT (TAKE input0 (MINIMUM input0))))
     [java] Prune program:(root (SORT (TAKE input0 (MINIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #149: MINIMUM TAKE REVERSE 
     [java] Checking Program: (root (REVERSE (TAKE input0 (MINIMUM input0))))
     [java] Prune program:(root (REVERSE (TAKE input0 (MINIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #150: MINIMUM TAKE SCANL1-PLUS 
     [java] Checking Program: (root (SCANL1-PLUS (TAKE input0 (MINIMUM input0))))
     [java] Prune program:(root (SCANL1-PLUS (TAKE input0 (MINIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #151: MINIMUM TAKE SCANL1-MINUS 
     [java] Checking Program: (root (SCANL1-MINUS (TAKE input0 (MINIMUM input0))))
     [java] Prune program:(root (SCANL1-MINUS (TAKE input0 (MINIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #152: MINIMUM TAKE SCANL1-MUL 
     [java] Checking Program: (root (SCANL1-MUL (TAKE input0 (MINIMUM input0))))
     [java] Prune program:(root (SCANL1-MUL (TAKE input0 (MINIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #153: MINIMUM TAKE SCANL1-MIN 
     [java] Checking Program: (root (SCANL1-MIN (TAKE input0 (MINIMUM input0))))
     [java] Prune program:(root (SCANL1-MIN (TAKE input0 (MINIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #154: MINIMUM TAKE SCANL1-MAX 
     [java] Checking Program: (root (SCANL1-MAX (TAKE input0 (MINIMUM input0))))
     [java] Prune program:(root (SCANL1-MAX (TAKE input0 (MINIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #155: MINIMUM DROP MAP-MUL 
     [java] Checking Program: (root (MAP-MUL (DROP input0 (MINIMUM input0))))
     [java] Prune program:(root (MAP-MUL (DROP input0 (MINIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #156: MINIMUM DROP MAP-DIV 
     [java] Checking Program: (root (MAP-DIV (DROP input0 (MINIMUM input0))))
     [java] Prune program:(root (MAP-DIV (DROP input0 (MINIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #157: MINIMUM DROP MAP-PLUS 
     [java] Checking Program: (root (MAP-PLUS (DROP input0 (MINIMUM input0))))
     [java] Prune program:(root (MAP-PLUS (DROP input0 (MINIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #158: MINIMUM DROP MAP-POW 
     [java] Checking Program: (root (MAP-POW (DROP input0 (MINIMUM input0))))
     [java] Prune program:(root (MAP-POW (DROP input0 (MINIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #159: MINIMUM DROP FILTER 
     [java] Checking Program: (root (FILTER (DROP input0 (MINIMUM input0))))
     [java] Prune program:(root (FILTER (DROP input0 (MINIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #160: MINIMUM DROP SORT 
     [java] Checking Program: (root (SORT (DROP input0 (MINIMUM input0))))
     [java] Prune program:(root (SORT (DROP input0 (MINIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #161: MINIMUM DROP REVERSE 
     [java] Checking Program: (root (REVERSE (DROP input0 (MINIMUM input0))))
     [java] Prune program:(root (REVERSE (DROP input0 (MINIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #162: MINIMUM DROP SCANL1-PLUS 
     [java] Checking Program: (root (SCANL1-PLUS (DROP input0 (MINIMUM input0))))
     [java] Prune program:(root (SCANL1-PLUS (DROP input0 (MINIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #163: MINIMUM DROP SCANL1-MINUS 
     [java] Checking Program: (root (SCANL1-MINUS (DROP input0 (MINIMUM input0))))
     [java] Prune program:(root (SCANL1-MINUS (DROP input0 (MINIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #164: MINIMUM DROP SCANL1-MUL 
     [java] Checking Program: (root (SCANL1-MUL (DROP input0 (MINIMUM input0))))
     [java] Prune program:(root (SCANL1-MUL (DROP input0 (MINIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #165: MINIMUM DROP SCANL1-MIN 
     [java] Checking Program: (root (SCANL1-MIN (DROP input0 (MINIMUM input0))))
     [java] Prune program:(root (SCANL1-MIN (DROP input0 (MINIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #166: MINIMUM DROP SCANL1-MAX 
     [java] Checking Program: (root (SCANL1-MAX (DROP input0 (MINIMUM input0))))
     [java] Prune program:(root (SCANL1-MAX (DROP input0 (MINIMUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #167: SUM MAP-MUL TAKE 
     [java] Checking Program: (root (TAKE (MAP-MUL input0) (SUM input0)))
     [java] Prune program:(root (TAKE (MAP-MUL input0) (SUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #168: SUM MAP-MUL DROP 
     [java] Checking Program: (root (DROP (MAP-MUL input0) (SUM input0)))
     [java] Prune program:(root (DROP (MAP-MUL input0) (SUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #169: SUM MAP-DIV TAKE 
     [java] Checking Program: (root (TAKE (MAP-DIV input0) (SUM input0)))
     [java] Prune program:(root (TAKE (MAP-DIV input0) (SUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #170: SUM MAP-DIV DROP 
     [java] Checking Program: (root (DROP (MAP-DIV input0) (SUM input0)))
     [java] Prune program:(root (DROP (MAP-DIV input0) (SUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #171: SUM MAP-PLUS TAKE 
     [java] Checking Program: (root (TAKE (MAP-PLUS input0) (SUM input0)))
     [java] Prune program:(root (TAKE (MAP-PLUS input0) (SUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #172: SUM MAP-PLUS DROP 
     [java] Checking Program: (root (DROP (MAP-PLUS input0) (SUM input0)))
     [java] Prune program:(root (DROP (MAP-PLUS input0) (SUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #173: SUM MAP-POW TAKE 
     [java] Checking Program: (root (TAKE (MAP-POW input0) (SUM input0)))
     [java] Prune program:(root (TAKE (MAP-POW input0) (SUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #174: SUM MAP-POW DROP 
     [java] Checking Program: (root (DROP (MAP-POW input0) (SUM input0)))
     [java] Prune program:(root (DROP (MAP-POW input0) (SUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #175: SUM FILTER TAKE 
     [java] Checking Program: (root (TAKE (FILTER input0) (SUM input0)))
     [java] Prune program:(root (TAKE (FILTER input0) (SUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #176: SUM FILTER DROP 
     [java] Checking Program: (root (DROP (FILTER input0) (SUM input0)))
     [java] Prune program:(root (DROP (FILTER input0) (SUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #177: SUM SORT TAKE 
     [java] Checking Program: (root (TAKE (SORT input0) (SUM input0)))
     [java] Prune program:(root (TAKE (SORT input0) (SUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #178: SUM SORT DROP 
     [java] Checking Program: (root (DROP (SORT input0) (SUM input0)))
     [java] Prune program:(root (DROP (SORT input0) (SUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #179: SUM REVERSE TAKE 
     [java] Checking Program: (root (TAKE (REVERSE input0) (SUM input0)))
     [java] Prune program:(root (TAKE (REVERSE input0) (SUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #180: SUM REVERSE DROP 
     [java] Checking Program: (root (DROP (REVERSE input0) (SUM input0)))
     [java] Prune program:(root (DROP (REVERSE input0) (SUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #181: SUM SCANL1-PLUS TAKE 
     [java] Checking Program: (root (TAKE (SCANL1-PLUS input0) (SUM input0)))
     [java] Prune program:(root (TAKE (SCANL1-PLUS input0) (SUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #182: SUM SCANL1-PLUS DROP 
     [java] Checking Program: (root (DROP (SCANL1-PLUS input0) (SUM input0)))
     [java] Prune program:(root (DROP (SCANL1-PLUS input0) (SUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #183: SUM SCANL1-MINUS TAKE 
     [java] Checking Program: (root (TAKE (SCANL1-MINUS input0) (SUM input0)))
     [java] Prune program:(root (TAKE (SCANL1-MINUS input0) (SUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #184: SUM SCANL1-MINUS DROP 
     [java] Checking Program: (root (DROP (SCANL1-MINUS input0) (SUM input0)))
     [java] Prune program:(root (DROP (SCANL1-MINUS input0) (SUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #185: SUM SCANL1-MUL TAKE 
     [java] Checking Program: (root (TAKE (SCANL1-MUL input0) (SUM input0)))
     [java] Prune program:(root (TAKE (SCANL1-MUL input0) (SUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #186: SUM SCANL1-MUL DROP 
     [java] Checking Program: (root (DROP (SCANL1-MUL input0) (SUM input0)))
     [java] Prune program:(root (DROP (SCANL1-MUL input0) (SUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #187: SUM SCANL1-MIN TAKE 
     [java] Checking Program: (root (TAKE (SCANL1-MIN input0) (SUM input0)))
     [java] Prune program:(root (TAKE (SCANL1-MIN input0) (SUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #188: SUM SCANL1-MIN DROP 
     [java] Checking Program: (root (DROP (SCANL1-MIN input0) (SUM input0)))
     [java] Prune program:(root (DROP (SCANL1-MIN input0) (SUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #189: SUM SCANL1-MAX TAKE 
     [java] Checking Program: (root (TAKE (SCANL1-MAX input0) (SUM input0)))
     [java] Prune program:(root (TAKE (SCANL1-MAX input0) (SUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #190: SUM SCANL1-MAX DROP 
     [java] Checking Program: (root (DROP (SCANL1-MAX input0) (SUM input0)))
     [java] Prune program:(root (DROP (SCANL1-MAX input0) (SUM input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #191: SUM TAKE MAP-MUL 
     [java] Checking Program: (root (MAP-MUL (TAKE input0 (SUM input0))))
     [java] Prune program:(root (MAP-MUL (TAKE input0 (SUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #192: SUM TAKE MAP-DIV 
     [java] Checking Program: (root (MAP-DIV (TAKE input0 (SUM input0))))
     [java] Prune program:(root (MAP-DIV (TAKE input0 (SUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #193: SUM TAKE MAP-PLUS 
     [java] Checking Program: (root (MAP-PLUS (TAKE input0 (SUM input0))))
     [java] Prune program:(root (MAP-PLUS (TAKE input0 (SUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #194: SUM TAKE MAP-POW 
     [java] Checking Program: (root (MAP-POW (TAKE input0 (SUM input0))))
     [java] Prune program:(root (MAP-POW (TAKE input0 (SUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #195: SUM TAKE FILTER 
     [java] Checking Program: (root (FILTER (TAKE input0 (SUM input0))))
     [java] Prune program:(root (FILTER (TAKE input0 (SUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #196: SUM TAKE SORT 
     [java] Checking Program: (root (SORT (TAKE input0 (SUM input0))))
     [java] Prune program:(root (SORT (TAKE input0 (SUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #197: SUM TAKE REVERSE 
     [java] Checking Program: (root (REVERSE (TAKE input0 (SUM input0))))
     [java] Prune program:(root (REVERSE (TAKE input0 (SUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #198: SUM TAKE SCANL1-PLUS 
     [java] Checking Program: (root (SCANL1-PLUS (TAKE input0 (SUM input0))))
     [java] Prune program:(root (SCANL1-PLUS (TAKE input0 (SUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #199: SUM TAKE SCANL1-MINUS 
     [java] Checking Program: (root (SCANL1-MINUS (TAKE input0 (SUM input0))))
     [java] Prune program:(root (SCANL1-MINUS (TAKE input0 (SUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #200: SUM TAKE SCANL1-MUL 
     [java] Checking Program: (root (SCANL1-MUL (TAKE input0 (SUM input0))))
     [java] Prune program:(root (SCANL1-MUL (TAKE input0 (SUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #201: SUM TAKE SCANL1-MIN 
     [java] Checking Program: (root (SCANL1-MIN (TAKE input0 (SUM input0))))
     [java] Prune program:(root (SCANL1-MIN (TAKE input0 (SUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #202: SUM TAKE SCANL1-MAX 
     [java] Checking Program: (root (SCANL1-MAX (TAKE input0 (SUM input0))))
     [java] Prune program:(root (SCANL1-MAX (TAKE input0 (SUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #203: SUM DROP MAP-MUL 
     [java] Checking Program: (root (MAP-MUL (DROP input0 (SUM input0))))
     [java] Prune program:(root (MAP-MUL (DROP input0 (SUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #204: SUM DROP MAP-DIV 
     [java] Checking Program: (root (MAP-DIV (DROP input0 (SUM input0))))
     [java] Prune program:(root (MAP-DIV (DROP input0 (SUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #205: SUM DROP MAP-PLUS 
     [java] Checking Program: (root (MAP-PLUS (DROP input0 (SUM input0))))
     [java] Prune program:(root (MAP-PLUS (DROP input0 (SUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #206: SUM DROP MAP-POW 
     [java] Checking Program: (root (MAP-POW (DROP input0 (SUM input0))))
     [java] Prune program:(root (MAP-POW (DROP input0 (SUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #207: SUM DROP FILTER 
     [java] Checking Program: (root (FILTER (DROP input0 (SUM input0))))
     [java] Prune program:(root (FILTER (DROP input0 (SUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #208: SUM DROP SORT 
     [java] Checking Program: (root (SORT (DROP input0 (SUM input0))))
     [java] Prune program:(root (SORT (DROP input0 (SUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #209: SUM DROP REVERSE 
     [java] Checking Program: (root (REVERSE (DROP input0 (SUM input0))))
     [java] Prune program:(root (REVERSE (DROP input0 (SUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #210: SUM DROP SCANL1-PLUS 
     [java] Checking Program: (root (SCANL1-PLUS (DROP input0 (SUM input0))))
     [java] Prune program:(root (SCANL1-PLUS (DROP input0 (SUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #211: SUM DROP SCANL1-MINUS 
     [java] Checking Program: (root (SCANL1-MINUS (DROP input0 (SUM input0))))
     [java] Prune program:(root (SCANL1-MINUS (DROP input0 (SUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #212: SUM DROP SCANL1-MUL 
     [java] Checking Program: (root (SCANL1-MUL (DROP input0 (SUM input0))))
     [java] Prune program:(root (SCANL1-MUL (DROP input0 (SUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #213: SUM DROP SCANL1-MIN 
     [java] Checking Program: (root (SCANL1-MIN (DROP input0 (SUM input0))))
     [java] Prune program:(root (SCANL1-MIN (DROP input0 (SUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #214: SUM DROP SCANL1-MAX 
     [java] Checking Program: (root (SCANL1-MAX (DROP input0 (SUM input0))))
     [java] Prune program:(root (SCANL1-MAX (DROP input0 (SUM input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #215: HEAD MAP-MUL TAKE 
     [java] Checking Program: (root (TAKE (MAP-MUL input0) (HEAD input0)))
     [java] Prune program:(root (TAKE (MAP-MUL input0) (HEAD input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #216: HEAD MAP-MUL DROP 
     [java] Checking Program: (root (DROP (MAP-MUL input0) (HEAD input0)))
     [java] Prune program:(root (DROP (MAP-MUL input0) (HEAD input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #217: HEAD MAP-DIV TAKE 
     [java] Checking Program: (root (TAKE (MAP-DIV input0) (HEAD input0)))
     [java] Prune program:(root (TAKE (MAP-DIV input0) (HEAD input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #218: HEAD MAP-DIV DROP 
     [java] Checking Program: (root (DROP (MAP-DIV input0) (HEAD input0)))
     [java] Prune program:(root (DROP (MAP-DIV input0) (HEAD input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #219: HEAD MAP-PLUS TAKE 
     [java] Checking Program: (root (TAKE (MAP-PLUS input0) (HEAD input0)))
     [java] Prune program:(root (TAKE (MAP-PLUS input0) (HEAD input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #220: HEAD MAP-PLUS DROP 
     [java] Checking Program: (root (DROP (MAP-PLUS input0) (HEAD input0)))
     [java] Prune program:(root (DROP (MAP-PLUS input0) (HEAD input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #221: HEAD MAP-POW TAKE 
     [java] Checking Program: (root (TAKE (MAP-POW input0) (HEAD input0)))
     [java] Prune program:(root (TAKE (MAP-POW input0) (HEAD input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #222: HEAD MAP-POW DROP 
     [java] Checking Program: (root (DROP (MAP-POW input0) (HEAD input0)))
     [java] Prune program:(root (DROP (MAP-POW input0) (HEAD input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #223: HEAD FILTER TAKE 
     [java] Checking Program: (root (TAKE (FILTER input0) (HEAD input0)))
     [java] Prune program:(root (TAKE (FILTER input0) (HEAD input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #224: HEAD FILTER DROP 
     [java] Checking Program: (root (DROP (FILTER input0) (HEAD input0)))
     [java] Prune program:(root (DROP (FILTER input0) (HEAD input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #225: HEAD SORT TAKE 
     [java] Checking Program: (root (TAKE (SORT input0) (HEAD input0)))
     [java] Prune program:(root (TAKE (SORT input0) (HEAD input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #226: HEAD SORT DROP 
     [java] Checking Program: (root (DROP (SORT input0) (HEAD input0)))
     [java] Prune program:(root (DROP (SORT input0) (HEAD input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #227: HEAD REVERSE TAKE 
     [java] Checking Program: (root (TAKE (REVERSE input0) (HEAD input0)))
     [java] Prune program:(root (TAKE (REVERSE input0) (HEAD input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #228: HEAD REVERSE DROP 
     [java] Checking Program: (root (DROP (REVERSE input0) (HEAD input0)))
     [java] Prune program:(root (DROP (REVERSE input0) (HEAD input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #229: HEAD SCANL1-PLUS TAKE 
     [java] Checking Program: (root (TAKE (SCANL1-PLUS input0) (HEAD input0)))
     [java] Prune program:(root (TAKE (SCANL1-PLUS input0) (HEAD input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #230: HEAD SCANL1-PLUS DROP 
     [java] Checking Program: (root (DROP (SCANL1-PLUS input0) (HEAD input0)))
     [java] Prune program:(root (DROP (SCANL1-PLUS input0) (HEAD input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #231: HEAD SCANL1-MINUS TAKE 
     [java] Checking Program: (root (TAKE (SCANL1-MINUS input0) (HEAD input0)))
     [java] Prune program:(root (TAKE (SCANL1-MINUS input0) (HEAD input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #232: HEAD SCANL1-MINUS DROP 
     [java] Checking Program: (root (DROP (SCANL1-MINUS input0) (HEAD input0)))
     [java] Prune program:(root (DROP (SCANL1-MINUS input0) (HEAD input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #233: HEAD SCANL1-MUL TAKE 
     [java] Checking Program: (root (TAKE (SCANL1-MUL input0) (HEAD input0)))
     [java] Prune program:(root (TAKE (SCANL1-MUL input0) (HEAD input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #234: HEAD SCANL1-MUL DROP 
     [java] Checking Program: (root (DROP (SCANL1-MUL input0) (HEAD input0)))
     [java] Prune program:(root (DROP (SCANL1-MUL input0) (HEAD input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #235: HEAD SCANL1-MIN TAKE 
     [java] Checking Program: (root (TAKE (SCANL1-MIN input0) (HEAD input0)))
     [java] Prune program:(root (TAKE (SCANL1-MIN input0) (HEAD input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #236: HEAD SCANL1-MIN DROP 
     [java] Checking Program: (root (DROP (SCANL1-MIN input0) (HEAD input0)))
     [java] Prune program:(root (DROP (SCANL1-MIN input0) (HEAD input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #237: HEAD SCANL1-MAX TAKE 
     [java] Checking Program: (root (TAKE (SCANL1-MAX input0) (HEAD input0)))
     [java] Prune program:(root (TAKE (SCANL1-MAX input0) (HEAD input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #238: HEAD SCANL1-MAX DROP 
     [java] Checking Program: (root (DROP (SCANL1-MAX input0) (HEAD input0)))
     [java] Prune program:(root (DROP (SCANL1-MAX input0) (HEAD input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #239: HEAD TAKE MAP-MUL 
     [java] Checking Program: (root (MAP-MUL (TAKE input0 (HEAD input0))))
     [java] Prune program:(root (MAP-MUL (TAKE input0 (HEAD input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #240: HEAD TAKE MAP-DIV 
     [java] Checking Program: (root (MAP-DIV (TAKE input0 (HEAD input0))))
     [java] Prune program:(root (MAP-DIV (TAKE input0 (HEAD input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #241: HEAD TAKE MAP-PLUS 
     [java] Checking Program: (root (MAP-PLUS (TAKE input0 (HEAD input0))))
     [java] Prune program:(root (MAP-PLUS (TAKE input0 (HEAD input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #242: HEAD TAKE MAP-POW 
     [java] Checking Program: (root (MAP-POW (TAKE input0 (HEAD input0))))
     [java] Prune program:(root (MAP-POW (TAKE input0 (HEAD input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #243: HEAD TAKE FILTER 
     [java] Checking Program: (root (FILTER (TAKE input0 (HEAD input0))))
     [java] Prune program:(root (FILTER (TAKE input0 (HEAD input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #244: HEAD TAKE SORT 
     [java] Checking Program: (root (SORT (TAKE input0 (HEAD input0))))
     [java] Prune program:(root (SORT (TAKE input0 (HEAD input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #245: HEAD TAKE REVERSE 
     [java] Checking Program: (root (REVERSE (TAKE input0 (HEAD input0))))
     [java] Prune program:(root (REVERSE (TAKE input0 (HEAD input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #246: HEAD TAKE SCANL1-PLUS 
     [java] Checking Program: (root (SCANL1-PLUS (TAKE input0 (HEAD input0))))
     [java] Prune program:(root (SCANL1-PLUS (TAKE input0 (HEAD input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #247: HEAD TAKE SCANL1-MINUS 
     [java] Checking Program: (root (SCANL1-MINUS (TAKE input0 (HEAD input0))))
     [java] Prune program:(root (SCANL1-MINUS (TAKE input0 (HEAD input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #248: HEAD TAKE SCANL1-MUL 
     [java] Checking Program: (root (SCANL1-MUL (TAKE input0 (HEAD input0))))
     [java] Prune program:(root (SCANL1-MUL (TAKE input0 (HEAD input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #249: HEAD TAKE SCANL1-MIN 
     [java] Checking Program: (root (SCANL1-MIN (TAKE input0 (HEAD input0))))
     [java] Prune program:(root (SCANL1-MIN (TAKE input0 (HEAD input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #250: HEAD TAKE SCANL1-MAX 
     [java] Checking Program: (root (SCANL1-MAX (TAKE input0 (HEAD input0))))
     [java] Prune program:(root (SCANL1-MAX (TAKE input0 (HEAD input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #251: HEAD DROP MAP-MUL 
     [java] Checking Program: (root (MAP-MUL (DROP input0 (HEAD input0))))
     [java] Prune program:(root (MAP-MUL (DROP input0 (HEAD input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #252: HEAD DROP MAP-DIV 
     [java] Checking Program: (root (MAP-DIV (DROP input0 (HEAD input0))))
     [java] Prune program:(root (MAP-DIV (DROP input0 (HEAD input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #253: HEAD DROP MAP-PLUS 
     [java] Checking Program: (root (MAP-PLUS (DROP input0 (HEAD input0))))
     [java] Prune program:(root (MAP-PLUS (DROP input0 (HEAD input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #254: HEAD DROP MAP-POW 
     [java] Checking Program: (root (MAP-POW (DROP input0 (HEAD input0))))
     [java] Prune program:(root (MAP-POW (DROP input0 (HEAD input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #255: HEAD DROP FILTER 
     [java] Checking Program: (root (FILTER (DROP input0 (HEAD input0))))
     [java] Prune program:(root (FILTER (DROP input0 (HEAD input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #256: HEAD DROP SORT 
     [java] Checking Program: (root (SORT (DROP input0 (HEAD input0))))
     [java] Prune program:(root (SORT (DROP input0 (HEAD input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #257: HEAD DROP REVERSE 
     [java] Checking Program: (root (REVERSE (DROP input0 (HEAD input0))))
     [java] Prune program:(root (REVERSE (DROP input0 (HEAD input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #258: HEAD DROP SCANL1-PLUS 
     [java] Checking Program: (root (SCANL1-PLUS (DROP input0 (HEAD input0))))
     [java] Prune program:(root (SCANL1-PLUS (DROP input0 (HEAD input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #259: HEAD DROP SCANL1-MINUS 
     [java] Checking Program: (root (SCANL1-MINUS (DROP input0 (HEAD input0))))
     [java] Prune program:(root (SCANL1-MINUS (DROP input0 (HEAD input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #260: HEAD DROP SCANL1-MUL 
     [java] Checking Program: (root (SCANL1-MUL (DROP input0 (HEAD input0))))
     [java] Prune program:(root (SCANL1-MUL (DROP input0 (HEAD input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #261: HEAD DROP SCANL1-MIN 
     [java] Checking Program: (root (SCANL1-MIN (DROP input0 (HEAD input0))))
     [java] Prune program:(root (SCANL1-MIN (DROP input0 (HEAD input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #262: HEAD DROP SCANL1-MAX 
     [java] Checking Program: (root (SCANL1-MAX (DROP input0 (HEAD input0))))
     [java] Prune program:(root (SCANL1-MAX (DROP input0 (HEAD input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #263: LAST MAP-MUL TAKE 
     [java] Checking Program: (root (TAKE (MAP-MUL input0) (LAST input0)))
     [java] Prune program:(root (TAKE (MAP-MUL input0) (LAST input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #264: LAST MAP-MUL DROP 
     [java] Checking Program: (root (DROP (MAP-MUL input0) (LAST input0)))
     [java] Prune program:(root (DROP (MAP-MUL input0) (LAST input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #265: LAST MAP-DIV TAKE 
     [java] Checking Program: (root (TAKE (MAP-DIV input0) (LAST input0)))
     [java] Prune program:(root (TAKE (MAP-DIV input0) (LAST input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #266: LAST MAP-DIV DROP 
     [java] Checking Program: (root (DROP (MAP-DIV input0) (LAST input0)))
     [java] Prune program:(root (DROP (MAP-DIV input0) (LAST input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #267: LAST MAP-PLUS TAKE 
     [java] Checking Program: (root (TAKE (MAP-PLUS input0) (LAST input0)))
     [java] Prune program:(root (TAKE (MAP-PLUS input0) (LAST input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #268: LAST MAP-PLUS DROP 
     [java] Checking Program: (root (DROP (MAP-PLUS input0) (LAST input0)))
     [java] Prune program:(root (DROP (MAP-PLUS input0) (LAST input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #269: LAST MAP-POW TAKE 
     [java] Checking Program: (root (TAKE (MAP-POW input0) (LAST input0)))
     [java] Prune program:(root (TAKE (MAP-POW input0) (LAST input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #270: LAST MAP-POW DROP 
     [java] Checking Program: (root (DROP (MAP-POW input0) (LAST input0)))
     [java] Prune program:(root (DROP (MAP-POW input0) (LAST input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #271: LAST FILTER TAKE 
     [java] Checking Program: (root (TAKE (FILTER input0) (LAST input0)))
     [java] Prune program:(root (TAKE (FILTER input0) (LAST input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #272: LAST FILTER DROP 
     [java] Checking Program: (root (DROP (FILTER input0) (LAST input0)))
     [java] Prune program:(root (DROP (FILTER input0) (LAST input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #273: LAST SORT TAKE 
     [java] Checking Program: (root (TAKE (SORT input0) (LAST input0)))
     [java] Prune program:(root (TAKE (SORT input0) (LAST input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #274: LAST SORT DROP 
     [java] Checking Program: (root (DROP (SORT input0) (LAST input0)))
     [java] Prune program:(root (DROP (SORT input0) (LAST input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #275: LAST REVERSE TAKE 
     [java] Checking Program: (root (TAKE (REVERSE input0) (LAST input0)))
     [java] Prune program:(root (TAKE (REVERSE input0) (LAST input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #276: LAST REVERSE DROP 
     [java] Checking Program: (root (DROP (REVERSE input0) (LAST input0)))
     [java] Prune program:(root (DROP (REVERSE input0) (LAST input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #277: LAST SCANL1-PLUS TAKE 
     [java] Checking Program: (root (TAKE (SCANL1-PLUS input0) (LAST input0)))
     [java] Prune program:(root (TAKE (SCANL1-PLUS input0) (LAST input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #278: LAST SCANL1-PLUS DROP 
     [java] Checking Program: (root (DROP (SCANL1-PLUS input0) (LAST input0)))
     [java] Prune program:(root (DROP (SCANL1-PLUS input0) (LAST input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #279: LAST SCANL1-MINUS TAKE 
     [java] Checking Program: (root (TAKE (SCANL1-MINUS input0) (LAST input0)))
     [java] Prune program:(root (TAKE (SCANL1-MINUS input0) (LAST input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #280: LAST SCANL1-MINUS DROP 
     [java] Checking Program: (root (DROP (SCANL1-MINUS input0) (LAST input0)))
     [java] Prune program:(root (DROP (SCANL1-MINUS input0) (LAST input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #281: LAST SCANL1-MUL TAKE 
     [java] Checking Program: (root (TAKE (SCANL1-MUL input0) (LAST input0)))
     [java] Prune program:(root (TAKE (SCANL1-MUL input0) (LAST input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #282: LAST SCANL1-MUL DROP 
     [java] Checking Program: (root (DROP (SCANL1-MUL input0) (LAST input0)))
     [java] Prune program:(root (DROP (SCANL1-MUL input0) (LAST input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #283: LAST SCANL1-MIN TAKE 
     [java] Checking Program: (root (TAKE (SCANL1-MIN input0) (LAST input0)))
     [java] Prune program:(root (TAKE (SCANL1-MIN input0) (LAST input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #284: LAST SCANL1-MIN DROP 
     [java] Checking Program: (root (DROP (SCANL1-MIN input0) (LAST input0)))
     [java] Prune program:(root (DROP (SCANL1-MIN input0) (LAST input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #285: LAST SCANL1-MAX TAKE 
     [java] Checking Program: (root (TAKE (SCANL1-MAX input0) (LAST input0)))
     [java] Prune program:(root (TAKE (SCANL1-MAX input0) (LAST input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #286: LAST SCANL1-MAX DROP 
     [java] Checking Program: (root (DROP (SCANL1-MAX input0) (LAST input0)))
     [java] Prune program:(root (DROP (SCANL1-MAX input0) (LAST input0)))
     [java] Sketch #iterations = 1
     [java] Sketch #287: LAST TAKE MAP-MUL 
     [java] Checking Program: (root (MAP-MUL (TAKE input0 (LAST input0))))
     [java] Prune program:(root (MAP-MUL (TAKE input0 (LAST input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #288: LAST TAKE MAP-DIV 
     [java] Checking Program: (root (MAP-DIV (TAKE input0 (LAST input0))))
     [java] Prune program:(root (MAP-DIV (TAKE input0 (LAST input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #289: LAST TAKE MAP-PLUS 
     [java] Checking Program: (root (MAP-PLUS (TAKE input0 (LAST input0))))
     [java] Prune program:(root (MAP-PLUS (TAKE input0 (LAST input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #290: LAST TAKE MAP-POW 
     [java] Checking Program: (root (MAP-POW (TAKE input0 (LAST input0))))
     [java] Prune program:(root (MAP-POW (TAKE input0 (LAST input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #291: LAST TAKE FILTER 
     [java] Checking Program: (root (FILTER (TAKE input0 (LAST input0))))
     [java] Prune program:(root (FILTER (TAKE input0 (LAST input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #292: LAST TAKE SORT 
     [java] Checking Program: (root (SORT (TAKE input0 (LAST input0))))
     [java] Prune program:(root (SORT (TAKE input0 (LAST input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #293: LAST TAKE REVERSE 
     [java] Checking Program: (root (REVERSE (TAKE input0 (LAST input0))))
     [java] Prune program:(root (REVERSE (TAKE input0 (LAST input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #294: LAST TAKE SCANL1-PLUS 
     [java] Checking Program: (root (SCANL1-PLUS (TAKE input0 (LAST input0))))
     [java] Prune program:(root (SCANL1-PLUS (TAKE input0 (LAST input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #295: LAST TAKE SCANL1-MINUS 
     [java] Checking Program: (root (SCANL1-MINUS (TAKE input0 (LAST input0))))
     [java] Prune program:(root (SCANL1-MINUS (TAKE input0 (LAST input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #296: LAST TAKE SCANL1-MUL 
     [java] Checking Program: (root (SCANL1-MUL (TAKE input0 (LAST input0))))
     [java] Prune program:(root (SCANL1-MUL (TAKE input0 (LAST input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #297: LAST TAKE SCANL1-MIN 
     [java] Checking Program: (root (SCANL1-MIN (TAKE input0 (LAST input0))))
     [java] Prune program:(root (SCANL1-MIN (TAKE input0 (LAST input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #298: LAST TAKE SCANL1-MAX 
     [java] Checking Program: (root (SCANL1-MAX (TAKE input0 (LAST input0))))
     [java] Prune program:(root (SCANL1-MAX (TAKE input0 (LAST input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #299: LAST DROP MAP-MUL 
     [java] Checking Program: (root (MAP-MUL (DROP input0 (LAST input0))))
     [java] Prune program:(root (MAP-MUL (DROP input0 (LAST input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #300: LAST DROP MAP-DIV 
     [java] Checking Program: (root (MAP-DIV (DROP input0 (LAST input0))))
     [java] Prune program:(root (MAP-DIV (DROP input0 (LAST input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #301: LAST DROP MAP-PLUS 
     [java] Checking Program: (root (MAP-PLUS (DROP input0 (LAST input0))))
     [java] Prune program:(root (MAP-PLUS (DROP input0 (LAST input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #302: LAST DROP MAP-POW 
     [java] Checking Program: (root (MAP-POW (DROP input0 (LAST input0))))
     [java] Prune program:(root (MAP-POW (DROP input0 (LAST input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #303: LAST DROP FILTER 
     [java] Checking Program: (root (FILTER (DROP input0 (LAST input0))))
     [java] Prune program:(root (FILTER (DROP input0 (LAST input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #304: LAST DROP SORT 
     [java] Checking Program: (root (SORT (DROP input0 (LAST input0))))
     [java] Prune program:(root (SORT (DROP input0 (LAST input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #305: LAST DROP REVERSE 
     [java] Checking Program: (root (REVERSE (DROP input0 (LAST input0))))
     [java] Prune program:(root (REVERSE (DROP input0 (LAST input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #306: LAST DROP SCANL1-PLUS 
     [java] Checking Program: (root (SCANL1-PLUS (DROP input0 (LAST input0))))
     [java] Prune program:(root (SCANL1-PLUS (DROP input0 (LAST input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #307: LAST DROP SCANL1-MINUS 
     [java] Checking Program: (root (SCANL1-MINUS (DROP input0 (LAST input0))))
     [java] Prune program:(root (SCANL1-MINUS (DROP input0 (LAST input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #308: LAST DROP SCANL1-MUL 
     [java] Checking Program: (root (SCANL1-MUL (DROP input0 (LAST input0))))
     [java] Prune program:(root (SCANL1-MUL (DROP input0 (LAST input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #309: LAST DROP SCANL1-MIN 
     [java] Checking Program: (root (SCANL1-MIN (DROP input0 (LAST input0))))
     [java] Prune program:(root (SCANL1-MIN (DROP input0 (LAST input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #310: LAST DROP SCANL1-MAX 
     [java] Checking Program: (root (SCANL1-MAX (DROP input0 (LAST input0))))
     [java] Prune program:(root (SCANL1-MAX (DROP input0 (LAST input0))))
     [java] Sketch #iterations = 1
     [java] Sketch #311: MAP-MUL MAXIMUM MAP-MUL 
     [java] Sketch #iterations = 0
     [java] Sketch #312: MAP-MUL MAXIMUM MAP-DIV 
     [java] Sketch #iterations = 0
     [java] Sketch #313: MAP-MUL MAXIMUM MAP-PLUS 
     [java] Sketch #iterations = 0
     [java] Sketch #314: MAP-MUL MAXIMUM MAP-POW 
     [java] Sketch #iterations = 0
     [java] Sketch #315: MAP-MUL MAXIMUM FILTER 
     [java] Sketch #iterations = 0
     [java] Sketch #316: MAP-MUL MAXIMUM ZIPWITH-PLUS 
     [java] Sketch #iterations = 0
     [java] Sketch #317: MAP-MUL MAXIMUM ZIPWITH-MINUS 
     [java] Sketch #iterations = 0
     [java] Sketch #318: MAP-MUL MAXIMUM ZIPWITH-MUL 
     [java] Sketch #iterations = 0
     [java] Sketch #319: MAP-MUL MAXIMUM ZIPWITH-MIN 
     [java] Sketch #iterations = 0
     [java] Sketch #320: MAP-MUL MAXIMUM ZIPWITH-MAX 
     [java] Sketch #iterations = 0
     [java] Sketch #321: MAP-MUL MAXIMUM SORT 
     [java] Sketch #iterations = 0
     [java] Sketch #322: MAP-MUL MAXIMUM REVERSE 
     [java] Sketch #iterations = 0
     [java] Sketch #323: MAP-MUL MAXIMUM SCANL1-PLUS 
     [java] Sketch #iterations = 0
     [java] Sketch #324: MAP-MUL MAXIMUM SCANL1-MINUS 
     [java] Sketch #iterations = 0
     [java] Sketch #325: MAP-MUL MAXIMUM SCANL1-MUL 
     [java] Sketch #iterations = 0
     [java] Sketch #326: MAP-MUL MAXIMUM SCANL1-MIN 
     [java] Sketch #iterations = 0
     [java] Sketch #327: MAP-MUL MAXIMUM SCANL1-MAX 
     [java] Sketch #iterations = 0
     [java] Sketch #328: MAP-MUL MAXIMUM TAKE 
     [java] Checking Program: (root (TAKE (MAP-MUL input0) (MAXIMUM input0)))
     [java] Prune program:(root (TAKE (MAP-MUL input0) (MAXIMUM input0)))
     [java] Checking Program: (root (TAKE input0 (MAXIMUM (MAP-MUL input0))))
     [java] Prune program:(root (TAKE input0 (MAXIMUM (MAP-MUL input0))))
     [java] Sketch #iterations = 2
     [java] Sketch #329: MAP-MUL MAXIMUM DROP 
     [java] Checking Program: (root (DROP (MAP-MUL input0) (MAXIMUM input0)))
     [java] Prune program:(root (DROP (MAP-MUL input0) (MAXIMUM input0)))
     [java] Checking Program: (root (DROP input0 (MAXIMUM (MAP-MUL input0))))
     [java] Prune program:(root (DROP input0 (MAXIMUM (MAP-MUL input0))))
     [java] Sketch #iterations = 2
     [java] Sketch #330: MAP-MUL COUNT TAKE 
     [java] Checking Program: (root (TAKE (MAP-MUL input0) (COUNT input0)))
     [java] Prune program:(root (TAKE (MAP-MUL input0) (COUNT input0)))
     [java] Checking Program: (root (TAKE input0 (COUNT (MAP-MUL input0))))
     [java] Prune program:(root (TAKE input0 (COUNT (MAP-MUL input0))))
     [java] Sketch #iterations = 2
     [java] Sketch #331: MAP-MUL COUNT DROP 
     [java] Checking Program: (root (DROP (MAP-MUL input0) (COUNT input0)))
     [java] Prune program:(root (DROP (MAP-MUL input0) (COUNT input0)))
     [java] Checking Program: (root (DROP input0 (COUNT (MAP-MUL input0))))
     [java] Prune program:(root (DROP input0 (COUNT (MAP-MUL input0))))
     [java] Sketch #iterations = 2
     [java] Sketch #332: MAP-MUL MINIMUM TAKE 
     [java] Checking Program: (root (TAKE (MAP-MUL input0) (MINIMUM input0)))
     [java] Prune program:(root (TAKE (MAP-MUL input0) (MINIMUM input0)))
     [java] Checking Program: (root (TAKE input0 (MINIMUM (MAP-MUL input0))))
     [java] Prune program:(root (TAKE input0 (MINIMUM (MAP-MUL input0))))
     [java] Sketch #iterations = 2
     [java] Sketch #333: MAP-MUL MINIMUM DROP 
     [java] Checking Program: (root (DROP (MAP-MUL input0) (MINIMUM input0)))
     [java] Prune program:(root (DROP (MAP-MUL input0) (MINIMUM input0)))
     [java] Checking Program: (root (DROP input0 (MINIMUM (MAP-MUL input0))))
     [java] Prune program:(root (DROP input0 (MINIMUM (MAP-MUL input0))))
     [java] Sketch #iterations = 2
     [java] Sketch #334: MAP-MUL SUM TAKE 
     [java] Checking Program: (root (TAKE (MAP-MUL input0) (SUM input0)))
     [java] Prune program:(root (TAKE (MAP-MUL input0) (SUM input0)))
     [java] Checking Program: (root (TAKE input0 (SUM (MAP-MUL input0))))
     [java] Prune program:(root (TAKE input0 (SUM (MAP-MUL input0))))
     [java] Sketch #iterations = 2
     [java] Sketch #335: MAP-MUL SUM DROP 
     [java] Checking Program: (root (DROP (MAP-MUL input0) (SUM input0)))
     [java] Prune program:(root (DROP (MAP-MUL input0) (SUM input0)))
     [java] Checking Program: (root (DROP input0 (SUM (MAP-MUL input0))))
     [java] Prune program:(root (DROP input0 (SUM (MAP-MUL input0))))
     [java] Sketch #iterations = 2
     [java] Sketch #336: MAP-MUL HEAD TAKE 
     [java] Checking Program: (root (TAKE (MAP-MUL input0) (HEAD input0)))
     [java] Prune program:(root (TAKE (MAP-MUL input0) (HEAD input0)))
     [java] Checking Program: (root (TAKE input0 (HEAD (MAP-MUL input0))))
     [java] Prune program:(root (TAKE input0 (HEAD (MAP-MUL input0))))
     [java] Sketch #iterations = 2
     [java] Sketch #337: MAP-MUL HEAD DROP 
     [java] Checking Program: (root (DROP (MAP-MUL input0) (HEAD input0)))
     [java] Prune program:(root (DROP (MAP-MUL input0) (HEAD input0)))
     [java] Checking Program: (root (DROP input0 (HEAD (MAP-MUL input0))))
     [java] Prune program:(root (DROP input0 (HEAD (MAP-MUL input0))))
     [java] Sketch #iterations = 2
     [java] Sketch #338: MAP-MUL LAST TAKE 
     [java] Checking Program: (root (TAKE (MAP-MUL input0) (LAST input0)))
     [java] Prune program:(root (TAKE (MAP-MUL input0) (LAST input0)))
     [java] Checking Program: (root (TAKE input0 (LAST (MAP-MUL input0))))
     [java] Prune program:(root (TAKE input0 (LAST (MAP-MUL input0))))
     [java] Sketch #iterations = 2
     [java] Sketch #339: MAP-MUL LAST DROP 
     [java] Checking Program: (root (DROP (MAP-MUL input0) (LAST input0)))
     [java] Prune program:(root (DROP (MAP-MUL input0) (LAST input0)))
     [java] Checking Program: (root (DROP input0 (LAST (MAP-MUL input0))))
     [java] Prune program:(root (DROP input0 (LAST (MAP-MUL input0))))
     [java] Sketch #iterations = 2
     [java] Sketch #340: MAP-MUL MAP-MUL MAP-DIV 
     [java] Checking Program: (root (MAP-DIV (MAP-MUL (MAP-MUL input0))))
     [java] Checking Program: (root (MAP-DIV (MAP-MUL (MAP-MUL input0 -3))))
     [java] Checking Program: (root (MAP-DIV (MAP-MUL (MAP-MUL input0 -3) -3)))
     [java] Checking Program: (root (MAP-DIV (MAP-MUL (MAP-MUL input0 -3) -3) -3))
     [java] Checking Program: (root (MAP-DIV (MAP-MUL (MAP-MUL input0 -3) -3) -2))
     [java] Checking Program: (root (MAP-DIV (MAP-MUL (MAP-MUL input0 -3) -3) -1))
     [java] Checking Program: (root (MAP-DIV (MAP-MUL (MAP-MUL input0 -3) -3) 1))
     [java] Checking Program: (root (MAP-DIV (MAP-MUL (MAP-MUL input0 -3) -3) 2))
     [java] Checking Program: (root (MAP-DIV (MAP-MUL (MAP-MUL input0 -3) -3) 3))
     [java] Checking Program: (root (MAP-DIV (MAP-MUL (MAP-MUL input0 -3) -2)))
     [java] Checking Program: (root (MAP-DIV (MAP-MUL (MAP-MUL input0 -3) -2) -3))
     [java] Checking Program: (root (MAP-DIV (MAP-MUL (MAP-MUL input0 -3) -2) -2))
     [java] Checking Program: (root (MAP-DIV (MAP-MUL (MAP-MUL input0 -3) -2) -1))
     [java] Checking Program: (root (MAP-DIV (MAP-MUL (MAP-MUL input0 -3) -2) 1))
     [java] Checking Program: (root (MAP-DIV (MAP-MUL (MAP-MUL input0 -3) -2) 2))
     [java] Checking Program: (root (MAP-DIV (MAP-MUL (MAP-MUL input0 -3) -2) 3))
     [java] Checking Program: (root (MAP-DIV (MAP-MUL (MAP-MUL input0 -3) -1)))
     [java] Checking Program: (root (MAP-DIV (MAP-MUL (MAP-MUL input0 -3) -1) -3))
     [java] Checking Program: (root (MAP-DIV (MAP-MUL (MAP-MUL input0 -3) -1) -2))
     [java] Checking Program: (root (MAP-DIV (MAP-MUL (MAP-MUL input0 -3) -1) -1))
     [java] Checking Program: (root (MAP-DIV (MAP-MUL (MAP-MUL input0 -3) -1) 1))
     [java] Checking Program: (root (MAP-DIV (MAP-MUL (MAP-MUL input0 -3) -1) 2))
     [java] Checking Program: (root (MAP-DIV (MAP-MUL (MAP-MUL input0 -3) -1) 3))
     [java] Checking Program: (root (MAP-DIV (MAP-MUL (MAP-MUL input0 -3) 0)))
     [java] Checking Program: (root (MAP-DIV (MAP-MUL (MAP-MUL input0 -3) 0) -3))
     [java] Synthesized PROGRAM: (root (MAP-DIV (MAP-MUL (MAP-MUL input0 -3) 0) -3))
     [java] Concrete programs=: 159
     [java] Partial programs=: 178
     [java] Search time=:584.9701689999996
     [java] Deduction time=:2756.2108510000025
     [java] Test time=:30.053481000000005
     [java] Synthesis time: 3766.747143
     [java] Total=:337
     [java] Prune partial=:172 %=:96.62921348314607
     [java] Prune concrete=:140 %=:88.0503144654088
     [java] SMT:716.1719780000008
     [java] Type:0.0

BUILD SUCCESSFUL
Total time: 6 seconds
